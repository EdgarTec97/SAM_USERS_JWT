{
  "name": "users-api",
  "version": "1.0.0",
  "description": "Exception Users microservice",
  "author": "Exception Corporation",
  "license": "ISC",
  "scripts": {
    "layers": "cd layers/general && yarn && yarn build && cd ../../",
    "lambdas": "cd lambdas && yarn && cd ..",
    "start": "yarn build && sam local start-api --docker-network sam-user-api -n .env.json",
    "start:prod": "yarn build && sam local start-api --template-file .aws-sam/build/template.yaml --docker-network sam-user-api -n .env.json",
    "build": "sam build --beta-features && cp -R layers/general/dist/node_modules .aws-sam/build/SharedLayerLambda/nodejs/node_modules",
    "deploy:production": "yarn build && sam deploy --template-file .aws-sam/build/template.yaml --stack-name user-service-production --s3-bucket user-bags-service-production --capabilities CAPABILITY_IAM --no-fail-on-empty-changeset --parameter-overrides TableName=BgUsers DeployEnviroment=prod IsOffline=false DynamoHost=dynamodb.us-east-1.amazonaws.com AWSRegion=us-east-1 Expiration=2 SecretKey=shhh AdminEmail=vayne.edgar@gmail.com ffmpegLayerArn=arn:aws:lambda:us-east-1:707902263176:layer:ffmpeg:1 WaterMarkImg=watermark.png",
    "delete:production": "sam delete --stack-name user-service-production",
    "deploy:staging": "yarn build && sam deploy --template-file .aws-sam/build/template.yaml --stack-name user-service-staging --s3-bucket user-bags-service-staging --capabilities CAPABILITY_IAM --no-fail-on-empty-changeset --parameter-overrides TableName=BgUsers DeployEnviroment=prod IsOffline=false DynamoHost=dynamodb.us-east-1.amazonaws.com AWSRegion=us-east-1 Expiration=2 SecretKey=shhh AdminEmail=vayne.edgar@gmail.com ffmpegLayerArn=arn:aws:lambda:us-east-1:707902263176:layer:ffmpeg:1 WaterMarkImg=watermark.png",
    "delete:staging": "sam delete --stack-name user-service-staging",
    "invoke:create": "yarn build && sam local invoke 'CreateUser' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:update": "yarn build && sam local invoke 'UpdateUsers' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:getAll": "yarn build && sam local invoke 'GetUsers' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:getById": "yarn build && sam local invoke 'GetUserById' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:delete": "yarn build && sam local invoke 'DeleteUser' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:login": "yarn build && sam local invoke 'LoginUser' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:noti": "yarn build && sam local invoke 'NotificationUser' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:all": "yarn invoke:create && yarn invoke:update && yarn invoke:getAll && yarn invoke:getById && yarn invoke:delete"
  },
  "dependencies": {
    "esbuild": "^0.18.17"
  }
}
