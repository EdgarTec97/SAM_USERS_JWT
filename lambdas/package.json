{
  "name": "users-api",
  "version": "1.0.0",
  "description": "Exception Users microservice",
  "author": "Exception Corporation",
  "license": "ISC",
  "scripts": {
    "start": "yarn build && sam local start-api --docker-network sam-user-api -n .env.json",
    "start:prod": "yarn build && sam local start-api --template-file .aws-sam/build/template.yaml --docker-network sam-user-api -n .env.json",
    "build": "sam build --beta-features",
    "deploy:production": "yarn build && sam deploy --template-file .aws-sam/build/template.yaml --stack-name user-service-production --s3-bucket user-bags-service-production --capabilities CAPABILITY_IAM --no-fail-on-empty-changeset --parameter-overrides TableName=BgUsers DeployEnviroment=prod IsOffline=false DynamoHost=dynamodb.us-east-1.amazonaws.com AWSRegion=us-east-1 Expiration=2 SecretKey=shhh",
    "delete:production": "sam delete --stack-name user-service-production",
    "deploy:staging": "yarn build && sam deploy --template-file .aws-sam/build/template.yaml --stack-name user-service-staging --s3-bucket user-bags-service-staging --capabilities CAPABILITY_IAM --no-fail-on-empty-changeset --parameter-overrides TableName=BgUsers DeployEnviroment=prod IsOffline=false DynamoHost=dynamodb.us-east-1.amazonaws.com AWSRegion=us-east-1 Expiration=2 SecretKey=shhh",
    "delete:staging": "sam delete --stack-name user-service-staging",
    "invoke:create": "yarn build && sam local invoke 'CreateUser' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:update": "yarn build && sam local invoke 'UpdateUsers' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:getAll": "yarn build && sam local invoke 'GetUsers' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:getById": "yarn build && sam local invoke 'GetUserById' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:delete": "yarn build && sam local invoke 'DeleteUser' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:login": "yarn build && sam local invoke 'LoginUser' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:noti": "yarn build && sam local invoke 'NotificationUser' --docker-network sam-user-api -e events/event.json -n .env.json",
    "invoke:all": "yarn invoke:create && yarn invoke:update && yarn invoke:getAll && yarn invoke:getById && yarn invoke:delete",
    "format": "prettier 'src/**/*.ts' --write",
    "compile": "tsc",
    "compile:watch": "tsc -w --preserveWatchOutput true",
    "lint": "eslint ./src --ext .ts",
    "test": "jest --runInBand",
    "test:watch": "jest --watch",
    "run-checks": "yarn lint && yarn test && yarn compile"
  },
  "dependencies": {
    "esbuild": "0.14.14"
  },
  "devDependencies": {
    "@types/jest": "29.2.0",
    "@types/node": "18.11.4",
    "@typescript-eslint/eslint-plugin": "5.10.2",
    "@typescript-eslint/parser": "5.10.2",
    "eslint": "8.8.0",
    "eslint-config-airbnb-typescript": "14.0.2",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-import": "2.25.2",
    "eslint-plugin-jest": "25.2.4",
    "eslint-plugin-prettier": "4.0.0",
    "jest": "29.2.1",
    "prettier": "2.5.1",
    "rimraf": "3.0.2",
    "ts-jest": "29.0.5",
    "ts-node": "10.9.1",
    "typescript": "4.8.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "ts",
      "js"
    ],
    "rootDir": ".",
    "collectCoverageFrom": [
      "src/**/*.{js,ts}"
    ],
    "testRegex": ".(e2e-)?spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "collectCoverage": true,
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  },
  "prettier": {
    "tabWidth": 2,
    "semi": true,
    "singleQuote": true,
    "trailingComma": "none",
    "endOfLine": "auto"
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "env": {
      "jest": true,
      "browser": true,
      "commonjs": true,
      "es6": true
    },
    "parserOptions": {
      "ecmaVersion": 2018,
      "sourceType": "module",
      "warnOnUnsupportedTypeScriptVersion": false
    },
    "extends": [
      "prettier",
      "eslint:recommended"
    ],
    "plugins": [
      "prettier"
    ],
    "rules": {
      "prettier/prettier": "warn",
      "no-var": "warn",
      "no-unused-vars": "off",
      "no-console": [
        "error",
        {
          "allow": [
            "info",
            "warn",
            "error"
          ]
        }
      ]
    }
  }
}
